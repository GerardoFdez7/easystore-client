import { useCallback, useMemo } from 'react';
import {
  useFindAllProductsQuery,
  FindAllProductsQueryVariables,
  TypeEnum,
  SortBy,
  SortOrder,
} from '@graphql/generated';

export const useGetAllProducts = (
  variables?: FindAllProductsQueryVariables,
) => {
  //Hook generated by apollo
  const { data, loading, error, refetch } = useFindAllProductsQuery({
    variables: {
      page: 1,
      limit: 10,
      categoriesIds: [],
      type: TypeEnum.Physical,
      sortBy: SortBy.CreatedAt,
      sortOrder: SortOrder.Asc,
      includeSoftDeleted: false,
      name: '',
      ...variables, // Sobrescribe con las variables proporcionadas
    },
    onError: (error) => {
      console.error('Error fetching products:', error);
    },
  });

  // Memoize products
  const products = useMemo(() => data?.getAllProducts?.products || [], [data]);

  // Function to refresh products
  const refreshProducts = useCallback(() => refetch(), [refetch]);

  return {
    products,
    loading,
    error,
    refreshProducts,
    total: data?.getAllProducts?.total || 0,
  };
};
